{"version":3,"sources":["redux/slices/favorites.ts","components/header/Favorites.tsx","redux/slices/ui.ts","components/header/Theme.tsx","components/header/index.tsx","components/countryTable/CountryTableHead.tsx","redux/slices/countries.ts","redux/thunk-actions.ts","components/favoriteCountry/index.tsx","components/countryTable/CountryRow.tsx","components/countryTable/CountryTableBody.tsx","components/loader/index.tsx","components/CountryList/index.tsx","components/countryTable/index.tsx","components/searchbar/index.tsx","components/sort/index.tsx","components/backtotop/index.tsx","pages/Home.tsx","components/countryCard/DetailAccordion.tsx","components/countryCard/FlagImage.tsx","components/countryCard/BackButton.tsx","components/countryCard/index.tsx","pages/CountryDetail.tsx","components/footer/index.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["favoritesSlice","createSlice","name","initialState","isShowing","count","content","reducers","showAll","state","setFavorites","action","payload","length","showFavorites","sortFavorites","sort","actions","Favorites","countOfFavs","useSelector","favorites","dispatch","useDispatch","chooseData","useCallback","IconButton","onClick","color","Badge","badgeContent","smallScreen","window","innerWidth","mode","uiSlice","toggleSmallScreen","changeMode","localStorage","setItem","JSON","stringify","Theme","theme","useTheme","palette","Index","navigate","useNavigate","navigateBackToHome","Paper","className","elevation","Typography","sx","cursor","display","justifyContent","CountryTableHead","TableHead","TableRow","TableCell","countriesSlice","data","filterWord","loading","setData","sortCountries","setFilter","fetchData","getState","a","countries","fetch","response","json","console","log","getFavsFromStorage","favsStr","getItem","parse","Heart","country","favs","countryIsFavorite","useMemo","find","c","favorite","countryInStore","indexOfFav","map","f","indexOf","splice","push","addFavorite","CountryRow","src","flag","alt","style","width","height","to","region","capital","population","align","CountryTableBody","filter","includes","useEffect","TableBody","fontSize","Loader","ui","colorSx","backgroundColor","mt","CountryAsList","Container","flexWrap","gap","p","flexDirection","flexGrow","px","py","CountryTable","isLoading","screenSizeIsSmall","changeUiState","addEventListener","removeEventListener","TableContainer","component","overflowX","tableLayout","Table","stickyHeader","SearchBar","useState","searchInput","setSearchInput","handleSubmit","e","preventDefault","filterData","target","value","alignItems","mb","border","onSubmit","type","InputBase","ml","flex","placeholder","inputProps","onChange","sortFunctions","byNameAtoZ","b","localeCompare","byNameZtoA","byCapitalAtoZ","byCapitalZtoA","byPopulationAsc","byPopulationDesc","SortOptions","sortString","setSortString","handleChange","FormControl","InputLabel","id","Select","labelId","label","MenuItem","BackToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","scrollToTop","scrollTo","top","behavior","right","bottom","position","size","Home","DetailAccordion","field","Accordion","AccordionSummary","expandIcon","AccordionDetails","textAlign","v","FlagImage","BackButton","Button","variant","languages","lang","currencies","curr","timeZones","timezones","pl","pr","nativeName","borders","CountryDetail","country_name","useParams","Footer","Link","href","underline","App","createTheme","ThemeProvider","path","element","rootReducer","favoritesReducer","countriesReducer","uiReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.891ba2a0.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Country } from '../types';\n\nexport type FavsStateType = {\n  isShowing: boolean;\n  count: number;\n  content: Country[];\n};\n\nconst initialState: FavsStateType = {\n  isShowing: false,\n  count: 0,\n  content: [],\n};\n\nexport const favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    showAll: (state) => {\n      state.isShowing = false;\n    },\n    setFavorites: (state, action: PayloadAction<Country[]>) => {\n      state.content = action.payload;\n      state.count = action.payload.length;\n    },\n    showFavorites: (state) => {\n      state.isShowing = true;\n    },\n    sortFavorites(state, action: PayloadAction<(a: Country, b: Country) => number>) {\n      state.content.sort(action.payload);\n    },\n  },\n});\n\nexport const { showAll, showFavorites, setFavorites, sortFavorites } = favoritesSlice.actions;\nexport default favoritesSlice.reducer;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nimport { showFavorites } from '../../redux/slices/favorites';\nimport { InitialState } from '../../redux/types';\n\nexport default function Favorites() {\n  const countOfFavs = useSelector((state: InitialState) => state.favorites.count);\n  const dispatch = useDispatch();\n\n  const chooseData = useCallback(() => {\n    dispatch(showFavorites());\n  }, [dispatch]);\n\n  return (\n    <IconButton onClick={chooseData} color=\"inherit\" aria-label=\"show-favorites\">\n      <Badge badgeContent={countOfFavs} color=\"info\">\n        <FavoriteIcon />\n      </Badge>\n    </IconButton>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { PaletteMode } from '@mui/material';\n\nexport type UiType = {\n  smallScreen: boolean;\n  mode: PaletteMode;\n};\n\nconst initialState: UiType = {\n  smallScreen: window.innerWidth < 750,\n  mode: 'light',\n};\n\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSmallScreen: (state: UiType, action: PayloadAction<boolean>) => {\n      state.smallScreen = action.payload;\n    },\n    changeMode: (state: UiType, action: PayloadAction<PaletteMode>) => {\n      localStorage.setItem('theme', JSON.stringify(action.payload));\n      state.mode = action.payload;\n    },\n  },\n});\n\nexport const { toggleSmallScreen, changeMode } = uiSlice.actions;\nexport default uiSlice.reducer;\n","import { useTheme } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport IconButton from '@mui/material/IconButton';\nimport DarkModeTwoTone from '@mui/icons-material/DarkModeTwoTone';\nimport LightModeTwoTone from '@mui/icons-material/LightModeTwoTone';\n\nimport { changeMode } from '../../redux/slices/ui';\n\nexport default function Theme() {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const changeThemeOfApp = () => {\n    dispatch(changeMode(theme.palette.mode === 'dark' ? 'light' : 'dark'));\n  };\n\n  return (\n    <IconButton onClick={changeThemeOfApp} color=\"inherit\" aria-label=\"toggle-dark-mode\">\n      {theme.palette.mode === 'dark' ? <LightModeTwoTone /> : <DarkModeTwoTone />}\n    </IconButton>\n  );\n}\n","import { useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport HomeIcon from '@mui/icons-material/Home';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\n\nimport Favorites from './Favorites';\nimport Theme from './Theme';\nimport { showAll } from '../../redux/slices/favorites';\nimport './header.scss';\n\nexport default function Index() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const navigateBackToHome = useCallback(() => {\n    navigate('/');\n    dispatch(showAll());\n  }, [navigate, dispatch]);\n\n  return (\n    <Paper className=\"header\" elevation={0}>\n      <Typography\n        sx={{ cursor: 'pointer', display: 'flex', justifyContent: 'center' }}\n        onClick={navigateBackToHome}\n      >\n        Countries Listed\n      </Typography>\n      <section className=\"header__navigation\">\n        <IconButton onClick={navigateBackToHome} color=\"inherit\" aria-label=\"go-to-home\">\n          <HomeIcon />\n        </IconButton>\n        <Favorites />\n        <Theme />\n      </section>\n    </Paper>\n  );\n}\n","import TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\n\nexport default function CountryTableHead() {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Flag</TableCell>\n        <TableCell>Name</TableCell>\n        <TableCell>Region</TableCell>\n        <TableCell>Capital</TableCell>\n        <TableCell>Population</TableCell>\n        <TableCell>Favourites</TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Country } from '../types';\n\nexport type CountriesStateType = {\n  data: Country[];\n  loading: boolean;\n  filterWord: string;\n};\n\nconst initialState: CountriesStateType = {\n  data: [],\n  filterWord: '',\n  loading: true,\n};\n\nexport const countriesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    setData: (state, action: PayloadAction<Country[]>) => {\n      state.data = action.payload;\n      state.loading = false;\n    },\n    sortCountries: (state, action: PayloadAction<(a: Country, b: Country) => number>) => {\n      state.data.sort(action.payload);\n    },\n    setFilter: (state, action: PayloadAction<string>) => {\n      state.filterWord = action.payload;\n    },\n  },\n});\n\nexport const { setData, sortCountries, setFilter } = countriesSlice.actions;\n\nexport default countriesSlice.reducer;\n","import { Dispatch } from '@reduxjs/toolkit';\n\nimport { setData } from './slices/countries';\nimport { setFavorites } from './slices/favorites';\nimport { changeMode } from './slices/ui';\nimport { Country, InitialState } from './types';\n\nexport function fetchData() {\n  return async (dispatch: Dispatch, getState: () => InitialState) => {\n    if (getState().countries.data.length > 0) {\n      return;\n    }\n    try {\n      const response = await fetch('https://restcountries.com/v2/all');\n      const data = await response.json();\n      dispatch(setData(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function getFavsFromStorage() {\n  return (dispatch: Dispatch) => {\n    const favsStr = localStorage.getItem('favorites');\n    if (favsStr) {\n      dispatch(setFavorites(JSON.parse(favsStr)));\n    } else {\n      localStorage.setItem('favorites', JSON.stringify([]));\n    }\n  };\n}\n\nexport function addFavorite(favorite: Country) {\n  return (dispatch: Dispatch) => {\n    const favsStr = localStorage.getItem('favorites');\n\n    if (favsStr) {\n      const favorites = JSON.parse(favsStr);\n      favorites.push(favorite);\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      dispatch(setFavorites(favorites));\n    }\n  };\n}\n\nexport function removeFavorite(favorite: Country) {\n  return (dispatch: Dispatch) => {\n    const favsStr = localStorage.getItem('favorites');\n    if (favsStr) {\n      const favorites = JSON.parse(favsStr);\n      const indexOfFav = favorites.map((f: Country) => f.name).indexOf(favorite.name);\n      favorites.splice(indexOfFav, 1);\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      dispatch(setFavorites(favorites));\n    }\n  };\n}\n\nexport function getModeFromStorage() {\n  return (dispatch: Dispatch) => {\n    const theme = localStorage.getItem('theme');\n    if (theme) {\n      dispatch(changeMode(JSON.parse(theme)));\n    } else {\n      localStorage.setItem('theme', JSON.stringify('light'));\n      dispatch(changeMode('light'));\n    }\n  };\n}\n","import { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport IconButton from '@mui/material/IconButton';\n\nimport { InitialState } from '../../redux/types';\nimport { Country } from '../../redux/types';\nimport { addFavorite, removeFavorite } from '../../redux/thunk-actions';\n\ntype HeartProps = {\n  country: Country;\n};\n\nexport default function Heart({ country }: HeartProps) {\n  const favs = useSelector((state: InitialState) => state.favorites);\n  const dispatch = useDispatch();\n\n  function addOrRemoveFav() {\n    const content = favs.content;\n    const countryInStore = content.find((c) => c.name === country.name);\n    if (countryInStore) {\n      dispatch(removeFavorite(country));\n    } else {\n      dispatch(addFavorite(country));\n    }\n  }\n\n  const countryIsFavorite = useMemo(\n    () => favs.content.find((c) => c.name === country.name),\n    [favs.content, country.name]\n  );\n  return (\n    <IconButton onClick={addOrRemoveFav} color=\"inherit\" aria-label=\"mark-as-favorite\">\n      <FavoriteIcon color={countryIsFavorite ? 'error' : 'inherit'} />\n    </IconButton>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Typography from '@mui/material/Typography';\n\nimport Heart from '../favoriteCountry';\nimport { Country } from '../../redux/types';\nimport './styles.scss';\n\ntype CountryRowProps = {\n  country: Country;\n};\n\nexport default function CountryRow({ country }: CountryRowProps) {\n  return (\n    <TableRow>\n      <TableCell>\n        <img\n          src={country.flag}\n          alt={`flag of ${country.name}`}\n          style={{ width: '40px', height: '30px' }}\n        />\n      </TableCell>\n      <TableCell>\n        <Link to={`/${country.name}`} className=\"country-link\">\n          <Typography>{country.name}</Typography>\n        </Link>\n      </TableCell>\n      <TableCell>{country.region}</TableCell>\n      <TableCell>{country.capital}</TableCell>\n      <TableCell>{country.population}</TableCell>\n      <TableCell align=\"center\">\n        <Heart country={country} />\n      </TableCell>\n    </TableRow>\n  );\n}\n","import { useMemo, useEffect } from 'react';\nimport { TableBody } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchData, getFavsFromStorage } from '../../redux/thunk-actions';\nimport CountryRow from './CountryRow';\nimport { Country } from '../../redux/types';\nimport { InitialState } from '../../redux/types';\n\nexport default function CountryTableBody() {\n  const countries = useSelector((state: InitialState) => state.countries);\n  const favorites = useSelector((state: InitialState) => state.favorites);\n  const filterWord = countries.filterWord;\n  const dispatch = useDispatch();\n\n  const data = useMemo(() => {\n    return (favorites.isShowing ? favorites.content : countries.data).filter(\n      (c: Country) =>\n        c.name?.includes(filterWord) ||\n        c.region?.includes(filterWord) ||\n        c.capital?.includes(filterWord)\n    );\n  }, [favorites, countries, filterWord]);\n\n  useEffect(() => {\n    dispatch(fetchData());\n    dispatch(getFavsFromStorage());\n  }, [dispatch]);\n  return (\n    <>\n      {data.length > 0 ? (\n        <TableBody sx={{ fontSize: 'large' }}>\n          {data.map((c: Country) => (\n            <CountryRow country={c} key={c.name} />\n          ))}\n        </TableBody>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n","import { useMemo } from 'react';\n\nimport Paper from '@mui/material/Paper';\n\nimport './index.scss';\nimport { useSelector } from 'react-redux';\nimport { InitialState } from '../../redux/types';\n\nexport default function Loader() {\n  const mode = useSelector((state: InitialState) => state.ui.mode);\n\n  const colorSx = useMemo(() => {\n    return mode === 'dark'\n      ? { backgroundColor: 'rgb(255, 255, 155)' }\n      : { backgroundColor: 'rgb(0,0,0)' };\n  }, [mode]);\n\n  return (\n    <Paper elevation={0} sx={{ mt: 5, display: 'flex', justifyContent: 'center', width: '100%' }}>\n      <Paper className=\"pillar one\" sx={colorSx} />\n      <Paper className=\"pillar two\" sx={colorSx} />\n      <Paper className=\"pillar three\" sx={colorSx} />\n    </Paper>\n  );\n}\n","import React, { useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Country, InitialState } from '../../redux/types';\nimport { fetchData, getFavsFromStorage } from '../../redux/thunk-actions';\nimport { Container, Paper, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nimport '../countryTable/styles.scss';\n\nexport default function CountryAsList() {\n  const countries = useSelector((state: InitialState) => state.countries);\n  const favorites = useSelector((state: InitialState) => state.favorites);\n  const filterWord = countries.filterWord;\n  const dispatch = useDispatch();\n\n  const data = useMemo(() => {\n    return (favorites.isShowing ? favorites.content : countries.data).filter(\n      (c: Country) =>\n        c.name?.includes(filterWord) ||\n        c.region?.includes(filterWord) ||\n        c.capital?.includes(filterWord)\n    );\n  }, [favorites, countries, filterWord]);\n\n  useEffect(() => {\n    dispatch(fetchData());\n    dispatch(getFavsFromStorage());\n  }, [dispatch]);\n  return (\n    <>\n      {data.length > 0 ? (\n        <Container sx={{ display: 'flex', flexWrap: 'wrap', gap: '10px', p: 0, mt: 2 }}>\n          {data.map((c: Country) => (\n            <Paper\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '6px',\n                flexGrow: 1,\n                px: 3,\n                py: 2,\n              }}\n              elevation={1}\n              key={c.name}\n            >\n              <img\n                src={c.flag}\n                alt={`flag of ${c.name}`}\n                style={{ width: '40px', height: '30px' }}\n              />\n              <Link to={`/${c.name}`} className=\"country-link\">\n                <Typography>{c.name}</Typography>\n              </Link>\n            </Paper>\n          ))}\n        </Container>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from '@mui/material/Table';\nimport TableContainer from '@mui/material/TableContainer';\nimport Paper from '@mui/material/Paper';\n\nimport { InitialState } from '../../redux/types';\nimport CountryTableHead from './CountryTableHead';\nimport CountryTableBody from './CountryTableBody';\nimport Loader from './../loader';\nimport CountriesAsList from '../CountryList';\nimport { toggleSmallScreen } from '../../redux/slices/ui';\n\nexport default function CountryTable() {\n  const isLoading = useSelector((state: InitialState) => state.countries.loading);\n\n  const dispatch = useDispatch();\n  const screenSizeIsSmall = useSelector((state: InitialState) => state.ui.smallScreen);\n\n  const changeUiState = useCallback(() => {\n    if (window.innerWidth < 750) {\n      dispatch(toggleSmallScreen(true));\n    } else {\n      dispatch(toggleSmallScreen(false));\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    window.addEventListener('resize', changeUiState);\n    return () => {\n      window.removeEventListener('resize', changeUiState);\n    };\n  }, [changeUiState]);\n\n  return (\n    <>\n      {screenSizeIsSmall ? (\n        <CountriesAsList />\n      ) : (\n        <TableContainer\n          component={Paper}\n          elevation={0}\n          sx={{ overflowX: 'initial', tableLayout: 'fixed' }}\n        >\n          <Table stickyHeader={true}>\n            <CountryTableHead />\n            <CountryTableBody />\n          </Table>\n        </TableContainer>\n      )}\n      {isLoading ? <Loader /> : <></>}\n    </>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTheme } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputBase from '@mui/material/InputBase';\n\nimport { setFilter } from '../../redux/slices/countries';\n\nexport default function SearchBar() {\n  const [searchInput, setSearchInput] = useState('');\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const handleSubmit = useCallback(\n    function (e) {\n      e.preventDefault();\n      dispatch(setFilter(searchInput));\n    },\n    [dispatch, searchInput]\n  );\n\n  const filterData = useCallback(\n    (e) => {\n      setSearchInput(e.target.value);\n      dispatch(setFilter(e.target.value));\n    },\n    [dispatch]\n  );\n\n  return (\n    <Paper\n      component=\"form\"\n      sx={{\n        p: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '1.5rem',\n        width: '100%',\n        mb: '2rem',\n        border: '1px solid orange',\n      }}\n      className=\"search-form\"\n      elevation={theme.palette.mode === 'light' ? 0 : 5}\n      onSubmit={handleSubmit}\n    >\n      <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Search by name, region or capital\"\n        inputProps={{ 'aria-label': 'Search by name, region or capital' }}\n        value={searchInput}\n        onChange={filterData}\n      />\n    </Paper>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SelectChangeEvent } from '@mui/material';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport { Country } from '../../redux/types';\nimport { sortCountries } from '../../redux/slices/countries';\n\ntype CompareFuncStr =\n  | 'byNameAtoZ'\n  | 'byNameZtoA'\n  | 'byCapitalAtoZ'\n  | 'byCapitalZtoA'\n  | 'byPopulationAsc'\n  | 'byPopulationDesc';\n\ntype SortFuncs = {\n  [key in CompareFuncStr]: (a: Country, b: Country) => number;\n};\n\nconst sortFunctions: SortFuncs = {\n  byNameAtoZ: (a, b) => a.name.localeCompare(b.name),\n  byNameZtoA: (a, b) => b.name.localeCompare(a.name),\n  byCapitalAtoZ: (a, b) => (a.capital || 'ZZZZZ').localeCompare(b.capital || 'ZZZZ'),\n  byCapitalZtoA: (a, b) => (b.capital || 'ZZZZZ').localeCompare(a.capital || 'ZZZZ'),\n  byPopulationAsc: (a, b) => a.population - b.population,\n  byPopulationDesc: (a, b) => b.population - a.population,\n};\n\nexport default function SortOptions() {\n  const [sortString, setSortString] = useState<CompareFuncStr>(() => 'byNameAtoZ');\n  const dispatch = useDispatch();\n\n  const handleChange = useCallback(\n    (e: SelectChangeEvent) => {\n      const value = e.target.value;\n      dispatch(sortCountries(sortFunctions[value as CompareFuncStr]));\n      setSortString(value as CompareFuncStr);\n    },\n    [dispatch]\n  );\n\n  return (\n    <FormControl>\n      <InputLabel id=\"sort-countries-by-label\">Sort</InputLabel>\n      <Select\n        labelId=\"sort-countries-by\"\n        id=\"sort-countries-by-options\"\n        value={sortString}\n        label=\"sort\"\n        onChange={handleChange}\n      >\n        <MenuItem value={'byNameAtoZ'}>Name (A-Z)</MenuItem>\n        <MenuItem value={'byNameZtoA'}>Name (Z-A)</MenuItem>\n        <MenuItem value={'byCapitalAtoZ'}>Capital (A-Z)</MenuItem>\n        <MenuItem value={'byCapitalZtoA'}>Capital (Z-A)</MenuItem>\n        <MenuItem value={'byPopulationAsc'}>Population (Asc)</MenuItem>\n        <MenuItem value={'byPopulationDesc'}>Population (desc)</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function BackToTop() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleVisibility = useCallback(() => {\n    if (window.pageYOffset > 300) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  }, []);\n\n  const scrollToTop = useCallback(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('scroll', toggleVisibility);\n    return () => {\n      window.removeEventListener('scroll', toggleVisibility);\n    };\n  }, [toggleVisibility]);\n\n  return isVisible ? (\n    <IconButton\n      onClick={scrollToTop}\n      sx={{\n        right: 0,\n        bottom: 0,\n        position: 'fixed',\n      }}\n      size=\"large\"\n    >\n      <KeyboardArrowUpIcon color=\"info\" />\n    </IconButton>\n  ) : (\n    <></>\n  );\n}\n","import Container from '@mui/material/Container';\n\nimport CountryTable from '../components/countryTable';\nimport SearchBar from '../components/searchbar';\nimport SortOption from '../components/sort';\nimport BackToTop from '../components/backtotop';\n\nimport './styles.scss';\n\nexport default function Home() {\n  return (\n    <>\n      <Container className=\"intro\" id=\"top\">\n        <h1 className=\"intro__header\">COUNTRY DATA</h1>\n        <span className=\"intro__description\">Detailed info of each country</span>\n      </Container>\n      <SearchBar />\n      <SortOption />\n      <CountryTable />\n      <BackToTop />\n    </>\n  );\n}\n","import Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\n\ntype DetailAccordionType = {\n  field: string;\n  value: string[];\n};\n\nexport default function DetailAccordion({ field, value }: DetailAccordionType) {\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMore />}>\n        <Typography>{field}</Typography>\n      </AccordionSummary>\n      <AccordionDetails sx={{ textAlign: 'left' }}>\n        <Typography>\n          {value.map((v) => (\n            <span key={v}>\n              {v} <br />\n            </span>\n          ))}\n        </Typography>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import { Country } from '../../redux/types';\n\nexport default function FlagImage({ country }: { country: Country }) {\n  return <img src={country.flag} alt={`Flag of ${country.name}`} className=\"flag\" />;\n}\n","import { useNavigate } from 'react-router';\nimport Button from '@mui/material/Button';\n\nexport default function BackButton() {\n  const navigate = useNavigate();\n\n  const navigateToHome = () => {\n    navigate('/');\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={navigateToHome}\n      sx={{ mt: 1, width: '100%' }}\n      size=\"large\"\n      color=\"success\"\n    >\n      Back\n    </Button>\n  );\n}\n","import { useMemo } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Country } from '../../redux/types';\nimport DetailAccordion from './DetailAccordion';\n\nimport FlagImage from './FlagImage';\nimport Heart from '../favoriteCountry';\nimport BackButton from './BackButton';\nimport './styles.scss';\n\ntype IndexPropsType = {\n  country: Country;\n};\n\nexport default function Index({ country }: IndexPropsType) {\n  const languages = useMemo(() => {\n    return country.languages ? country.languages.map((lang) => lang.name) : ['N/A'];\n  }, [country.languages]);\n\n  const currencies = useMemo(() => {\n    return country.currencies ? country.currencies.map((curr) => curr.name) : ['N/A'];\n  }, [country.currencies]);\n\n  const timeZones = useMemo(() => {\n    return country.timezones.length > 0 ? country.timezones : ['N/A'];\n  }, [country.timezones]);\n\n  return (\n    <Paper elevation={0} className=\"country-card\">\n      <FlagImage country={country} />\n      <Paper\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          py: 2,\n          pl: 1,\n          pr: 1.5,\n        }}\n      >\n        <span>{country.name}</span>\n        <Heart country={country} />\n      </Paper>\n      <DetailAccordion field=\"Native name\" value={[country.nativeName || 'N/A']} />\n      <DetailAccordion field=\"region\" value={[country.region]} />\n      <DetailAccordion field=\"capital\" value={[country.capital || 'N/A']} />\n      <DetailAccordion field=\"Population\" value={[country.population + '']} />\n      <DetailAccordion field=\"Languages\" value={languages} />\n      <DetailAccordion field=\"Currencies\" value={currencies} />\n      <DetailAccordion field=\"Time Zones\" value={timeZones} />\n      <DetailAccordion field=\"Borders\" value={country.borders ? country.borders : ['N/A']} />\n      <BackButton />\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport CountryCard from '../components/countryCard';\nimport Paper from '@mui/material/Paper';\n\nimport { InitialState } from '../redux/types';\nimport { Country } from '../redux/types';\n\nimport './styles.scss';\n\nexport default function CountryDetail() {\n  const countries = useSelector((state: InitialState) => state.countries);\n  const { country_name } = useParams();\n  const country = countries.data.find((c: Country) => c.name === country_name) as Country;\n  return (\n    <Paper className=\"country-page\" elevation={0}>\n      <CountryCard country={country} />\n    </Paper>\n  );\n}\n","import Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n\nimport './index.scss';\n\nexport default function Footer() {\n  return (\n    <Paper className=\"footer\" elevation={0}>\n      <Typography>\n        Developed by\n        <Link\n          href=\"https://yahyasalimi.netlify.app\"\n          underline=\"hover\"\n          color=\"inherit\"\n          target=\"_blank\"\n        >\n          {' '}\n          Yahya Salimi\n        </Link>\n      </Typography>\n    </Paper>\n  );\n}\n","import { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport { PaletteMode } from '@mui/material';\n\nimport Header from './components/header';\nimport Home from './pages/Home';\nimport CountryDetail from './pages/CountryDetail';\nimport Footer from './components/footer';\nimport { InitialState } from './redux/types';\nimport { getModeFromStorage } from './redux/thunk-actions';\n\nimport './_base.scss';\n\nfunction App() {\n  const mode: PaletteMode = useSelector((state: InitialState) => state.ui.mode);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getModeFromStorage());\n  }, [dispatch]);\n\n  const theme = createTheme({\n    palette: {\n      mode,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"App\" elevation={0}>\n        <Paper className=\"App__content\" elevation={0}>\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/:country_name\" element={<CountryDetail />} />\n          </Routes>\n          <Footer />\n        </Paper>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport countriesReducer from './slices/countries';\nimport favoritesReducer from './slices/favorites';\nimport uiReducer from './slices/ui';\n\nconst rootReducer = {\n  favorites: favoritesReducer,\n  countries: countriesReducer,\n  ui: uiReducer,\n};\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}